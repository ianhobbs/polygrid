
// A Polygrid Kit   Version #2 / codekit project.


// *  *  * Description *  *  *  //

// 	- 12 col responsive asymetric grid using ratio (1.414Â°) for % based columns
//	- 18 classes 
//	- see live demo at https://ianhobbsmedia.com.au/style.php
//  - version 2 removes the pesky header and rows


// *  *  * Dependencies *  *  *  //

// 1 Codekit application.
// 2 Modular scale
// 3 Config

// *  *  *  Config *  *  *  //

//@import '../node_modules/modularscale-sass/stylesheets/_modularscale.scss'
//@import 'node_modules/modularscale-sass/stylesheets/_modularscale.scss'

// $lineHeight: 1.29

// set up vars before you import

// note $ a base is a unitless copy of the font unit so that the calculator can do its thing

$bFontSize: 1.063em
$modularscale: (base: $bFontSize, ratio: 1.414, a:(base: 1.063))



$mobile: (min-width 320px)
$ipad: (min-width 768px)
$laptop: (min-width 1200px)
$desktop: (min-width 1920px)
$twok: (min-width 2100px)

// $gutters: ms(2)

//- $figs: ( RX:0.25, R0:0.354, R1:0.5, R2:0.751, R3:0.998, R4:1.414, R5:1.999, R6:2.827, R7: 3.998 ) old method

$figs: (RXXX:ms(-6, $thread: a),RXX:ms(-5, $thread: a), RX:ms(-4, $thread: a), R0:ms(-3, $thread: a), R1:ms(-2, $thread: a), R2:ms(-1, $thread: a), R3:ms(0, $thread: a), R4:ms(1, $thread: a), R5:ms(2, $thread: a), R6:ms(3, $thread: a), R7:ms(4, $thread: a))

//  converts static values to percentages for fluid layouts. below

@function calc-ratio($R)
	@return percentage(map-get($figs,$R)*10/100)

/* purgecss start ignore */ 

.grid-polycol_2
	margin: auto
	display: grid
	grid-template-columns: ms(0) repeat(10, 1fr) ms(0)
	grid-column-gap: 0
	width: 100%
	grid-auto-rows: minmax(90px, auto)
	grid-auto-flow: dense
	grid-row-gap: ms(-1)
	.fullblock
		grid-column: 1 / -1
	.full
		grid-column: 1 / -1
		width: 100%
	.span2n5, .span2n6, .span2n7, .span3n7, .span3n8, .span4n8, .span4n9, .triA, .span5n10, .triB, .span8n11, .triC, .span9n12, .span7n10, .span7n11, .x12
		grid-column: 2 / 12
	.mid4n11, .mid5n12, .mid4n10, .span5n9
		grid-column: 2 / 12
	.span6n11
		grid-column: 1 / -1
	.span6n10
		grid-column: 2 / 12
	.span10n12
		grid-column: 2 / 12
	.waist611
		grid-column: 1 / -1
	.span2
		grid-column: 2 / 12
	.span2n12
		grid-column: 2 / 12
	.span1n5
		grid-column: 2 / 12
	.row1
		grid-row: 1
	.row1n2
		grid-row: 1 / 2
	.row2
		grid-row: 2
	.row3
		grid-row: 3
	.row4
		grid-row: 4
	@include breakpoint($ipad)
		grid-template-columns: 20px 1fr calc-ratio(R1) calc-ratio(RX) calc-ratio(RXX) calc-ratio(R1) calc-ratio(R2) calc-ratio(R2) 1fr 1fr calc-ratio(RX) 36px
		grid-column-gap: ms(1)
		grid-auto-rows: minmax(90px, auto)
		grid-row-gap: ms(0)
		.span2n5
			grid-column: 2 / 5
		.span2n6
			grid-column: 2 / 6
		.span2n7
			grid-column: 2 / 7
		.span2n12
			grid-column: 2 / 12
		.span3n7
			grid-column: 2 / 7
		.span3n8
			grid-column: 2 / 8
		.span4n8
			grid-column: 4 / 8
		.span4n9
			grid-column: 4 / 9
		.mid4n11
			grid-column: 3 / 12
		.mid4n10
			grid-column: 3 / 10
		.mid5n12
			grid-column: 4 / 12
		.span5n10
			grid-column: 5 / 12
		.span5n9
			grid-column: 5 / 9
		.span6n10
			grid-column: 5 / 11
		.span7n10
			grid-column: 5 / 11
		.span7n11
			grid-column: 6 / 11
		.triA
			grid-column: 2 / 10
		.triB
			grid-column: 2 / 8
		.span8n11
			grid-column: 8 / 11
		.triC
			grid-column: 8 / 12
		.span9n12
			grid-column: 9 / 12
		.span6n11
			grid-column: 2 / 12
		.waist611
			grid-column: 2 / 12
		.span10n12
			grid-column: 10 / 12
		.span2
			grid-column: span 2
		.span3
			grid-column: span 3
		.x12
			grid-column: 12 / 13
			grid-row: 1
		.span1n5
			grid-column: 1 / 6
			padding-left: ms(1)
	@include breakpoint($laptop)
		grid-template-columns: ms(2) ms(4) calc-ratio(RX) calc-ratio(R2) calc-ratio(R1) 1fr calc-ratio(R1) calc-ratio(R2) calc-ratio(R4) calc-ratio(R2) ms(2) 68px
		grid-column-gap: ms(2)
		grid-template-rows: auto
		.span3n7
			grid-column: 3 / 7
		.span3n8
			grid-column: 3 / 8
		.span4n9
			grid-column: 4 / 9
		.mid4n11
			grid-column: 4 / 11
		.mid4n10
			grid-column: 4 / 10
		.mid5n12
			grid-column: 5 / 12
		.span5n10
			grid-column: 5 / 10
		.triA
			grid-column: 2 / 6
		.triB
			grid-column: 6 / 9
		.triC
			grid-column: 9 / 11
		.span6n11
			grid-column: 6 / 11
		.span6n10
			grid-column: 6 / 10
		.span7n10
			grid-column: 7 / 10
		.span7n11
			grid-column: 7 / 11
		.span1n5
			grid-column: 1 / 5
			padding-left: ms(2)
	@include breakpoint($desktop)
		grid-template-columns: 20px calc-ratio(RXX) calc-ratio(R1) calc-ratio(R2) calc-ratio(R2) 1fr calc-ratio(R1) calc-ratio(R3) calc-ratio(R4) calc-ratio(R3) calc-ratio(R1) 78px
		grid-column-gap: ms(2)
		grid-row-gap: ms(2)
		width: 1920px

// a grid subgrid

.flex_poly_2
	margin: auto
	display: grid
	grid-template-columns: ms(0) repeat(10, 1fr) ms(0)
	grid-column-gap: 0
	.fp4n11
		grid-column: 2 / 11
	.fp10
		grid-column: 2 / 11
	@include breakpoint($ipad)
		grid-template-columns: ms(-2) calc-ratio(RX) calc-ratio(R1) calc-ratio(R2) calc-ratio(R3) calc-ratio(R1) calc-ratio(R3) calc-ratio(R2) calc-ratio(R4) 1fr calc-ratio(RX) ms(-2)
		grid-column-gap: ms(-2)
		.fp4n11
			grid-column: 3 / 10
		.fp10
			grid-column: 10
	@include breakpoint($laptop)
		grid-template-columns: 1fr calc-ratio(RX) calc-ratio(R1) calc-ratio(R3) calc-ratio(R2) calc-ratio(R1) calc-ratio(R1) calc-ratio(R3) calc-ratio(R4) calc-ratio(R2) calc-ratio(R1) 1fr
		grid-column-gap: ms(0)
		.fp4n11
			grid-column: 4 / 11
	@include breakpoint($desktop)
		grid-template-columns: 1fr calc-ratio(RX) calc-ratio(R1) calc-ratio(R3) calc-ratio(R2) calc-ratio(RX) calc-ratio(R1) calc-ratio(R3) calc-ratio(R4) calc-ratio(R3)calc-ratio(R2) 1fr

.crush_poly_2
	margin: auto
	display: grid
	grid-template-columns: ms(0) repeat(10, 1fr) ms(0)
	grid-column-gap: 0
	grid-row-gap: ms(-1)
	grid-auto-rows: minmax(70px, auto)
	grid-auto-flow: dense
	.cp1,.cp2,.cp3,.cp4,.leftt,.rightt,.leftb,.rightb,.area1,.mid3,.mid4
		grid-column: 2 / 12
	@include breakpoint($ipad)
		grid-template-columns: ms(2) repeat(10, 1fr) ms(2)
		grid-row-gap: ms(-2)
		grid-column-gap: ms(0)
		grid-auto-rows: minmax(90px, auto)
		.cp1
			grid-column: span 1
		.cp2
			grid-column: span 2
		.cp3
			grid-column: span 3
		.cp4
			grid-column: span 4
		.leftt
			grid-column: 2 / 6
			grid-row: 1 / 4
			img, figcaption
				transform: rotate(-1deg)
		.rightt
			grid-column: 5 / 9
			grid-row: 1 / 4
			img, figcaption
				transform: rotate(1deg)
				margin-top: ms(2)
		.leftb
			grid-column: 2 / 5
			grid-row: 4 / 7
			img, figcaption
				transform: rotate(1deg)
				margin-top: -(ms(6))
		.rightb
			grid-column: 4 / 8
			grid-row: 5 / 9
			img, figcaption
				transform: rotate(-1.2deg)
				margin-top: -(ms(6))
		.area1
			grid-column: 3 / 7
			grid-row: 4 / 7
		.mid3
			grid-column: 2 / 5
		.mid4
			grid-column: 5 / 10



	@include breakpoint($laptop)
		grid-template-columns: ms(3) calc-ratio(R3) calc-ratio(R4) calc-ratio(R5) 1fr calc-ratio(R4) calc-ratio(R3) ms(3)


$measures: ('.pad02':ms(-2), '.pad01':ms(-1), '.pad0':ms(0), '.pad1':ms(1), '.pad2':ms(2), '.pad3':ms(3), '.pad4':ms(4), '.pad5':ms(5), '.pad6':ms(6))

$push: ('.push02':ms(-2), '.push01':ms(-1), '.push0':ms(0), '.push1':ms(1), '.push2':ms(2), '.push3':ms(3), '.push4':ms(4))

$padtop: ('.padtop02':ms(-2), '.padtop01':ms(-1), '.padtop0':ms(0), '.padtop1':ms(1), '.padtop2':ms(2), '.padtop3':ms(3), '.padtop4':ms(4))

$pull: ('.pulldown02':ms(-2), '.pulldown01':ms(-1), '.pulldown0':ms(0), '.pulldown1':ms(1), '.pulldown2':ms(2), '.pulldown3':ms(3), '.pulldown4':ms(4),'.pulldown5':ms(5),'.pulldown6':ms(6))

// pad all round

@each $elem, $sz in $measures
	#{$elem}
		padding: $sz 0 $sz 0
		@include breakpoint($ipad)
			padding: $sz

// push the content below

@each $elem, $sz in $push
	#{$elem}
		margin-bottom: $sz

//push the content above
@each $elem, $sz in $pull
	#{$elem}
		margin-top: $sz * 0.6
		@include breakpoint($ipad)
			margin-top: $sz
// pad the top content
@each $elem, $sz in $padtop
	#{$elem}
		padding-top: $sz * 0.6
		@include breakpoint($ipad)
			padding-top: $sz


.null
	padding: 0
	margin: 0
	
/* purgecss end ignore */
